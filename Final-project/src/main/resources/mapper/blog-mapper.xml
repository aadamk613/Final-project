<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="blogMapper">

	<resultMap type="blog" id="BlogResultSet">
		<result column="BLOG_NO" property="blogNo"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="BLOG_TITLE" property="blogTitle"/>
		<result column="BLOG_INTRODUCE" property="blogIntroduce"/>
		<result column="BLOG_IMG" property="blogImg"/>
		<result column="BLOG_INTEREST" property="blogInterest"/>
		<result column="PLANT_PREFER" property="plantPrefer "/>
		<result column="BLOG_CREATE_DATE" property="blogCreateDate"/>
		<result column="MEM_ID" property="memId"/>
		<result column="MEM_NICK" property="memNick"/>
		<result column="MEM_IMG" property="memImg"/>

		<result column="FILE_PATH" property="filePath"/>
		<result column="UPDATE_NAME" property="updateName"/>
	</resultMap>

	<resultMap type="blogCategorySetting" id="BlogCategorySettingResultSet">
		<result column="CATEGORY_NO" property="categoryNo"/>
		<result column="CATEGORY_SETTING_NO" property="categorySettingNo"/>
		<result column="BLOG_NO" property="blogNo"/>
		<result column="CATEGORY_MEM_NAME" property="categoryMemName"/>
	</resultMap>
	<resultMap type="plant" id="PlantResultSet">
		<result column="PLANT_NO" property="plantNo"/>
		<result column="BLOG_NO" property="blogNo"/>
		<result column="PLANT_NAME" property="plantName"/>
		<result column="PLANT_NICKNAME" property="plantNickName"/>
		<result column="PLANT_COMMENT" property="plantComment"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="STATUS" property="status"/>
		<result column="VIEW" property="view "/>
		<result column="PLANT_CATEGORY" property="plantCategory"/>
		<result column="PLANT_LOG_DATE" property="plantLogDate"/>

		<result column="FILE_PATH" property="filePath"/>
		<result column="UPDATE_NAME" property="updateName"/>
	</resultMap>

	<resultMap type="blogBoard" id="BlogBoardResultSet">
		<result column="BLOG_BOARD_NO" property="blogBoardNo"/>
		<result column="BLOG_NO" property="blogNo"/>
		<result column="CATEGORY_SETTING_NO" property="cattegorySettingNo"/>
		<result column="BLOG_BOARD_TITLE" property="blogBoardTitle"/>
		<result column="BLOG_BOARD_CONTENT" property="blogBoardContent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="VIEW" property="view "/>
		<result column="STATUS" property="status"/>
		<result column="WRITER" property="writer"/>

		<result column="BLOG_INTEREST" property="blogInterest"/>
		<result column="CATEGORY_MEM_NAME" property="categoryMemName"/>
	</resultMap>

	
	<resultMap type="blogReply" id="BlogReplyResultset">
		<result column="BLOG_REPLY_NO" property="blogReplyNo"/>
		<result column="TOP_REPLY_NO" property="topReplyNo"/>
		<result column="BLOG_BOARD_NO" property="blogBoardNo"/>
		<result column="WRITER" property="writer"/>
		<result column="BLOG_REPLY_CONTENT" property="blogReplycontent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="REPLY_SECRET" property="replySecret "/>
		<result column="STATUS" property="status"/>
		
		<result column="MEM_NICK" property="memNick"/>
	</resultMap>
	
	
	<!-- 블로그 생성 -->
	<insert id="insertBlog" parameterType="blog">
		INSERT 
			INTO
    		TB_BLOG
    				(
    				BLOG_NO, 
    				MEM_NO,
    				BLOG_TITLE,
    				BLOG_INTRODUCE,
    				BLOG_IMG,
    				BLOG_INTEREST,
    				PLANT_PREFER
    				)
    		VALUES
    				(
    				SEQ_BLOG.NEXTVAL,
    				#{ memNo },
    				#{ blogTitle },
    				#{ blogIntroduce },
    				#{ blogImg },
    				#{ blogInterest },
    				#{ plantPrefer }
    				)
    				
	</insert>

	<!-- 블로그 사이드바에서 member조회 -->
	<update id="updateMemberBlogNo" parameterType="blog">
		UPDATE MEMBER 
			SET 
				BLOG_NO = SEQ_BLOG.CURRVAL
		WHERE 
			MEM_NO = #{ memNo }
	
	</update>

	<!-- 블로그 조회 -->
	<select id="selectBlog" parameterType="_int" resultMap="BlogResultSet">
		
		SELECT   * 
            FROM 
                (SELECT
                        BLOG_NO,
                        B.MEM_NO,
                        BLOG_TITLE,
                        BLOG_INTRODUCE,
                        BLOG_INTEREST,
                        MEM_ID,
                        MEM_NICK,
                        MEM_IMG,
                        FILE_PATH,
                        UPDATE_NAME 
                    FROM
                        TB_BLOG B
                    JOIN
                        TB_MEMBER USING(BLOG_NO)
                    LEFT OUTER JOIN
                        TB_ATTACHMENT ON (REF_NO = BLOG_NO)
                    AND
                        REF_TYPE = 'blog')

            WHERE
                BLOG_NO = #{ blogNo }
			                
	</select>

	<!-- 블로그 기본 정보 수정 -->
	<update id="updateBlog" parameterType="blog">
	
		UPDATE
			  TB_BLOG
		   SET
				BLOG_TITLE = #{ blogTitle }, 
				BLOG_INTRODUCE = #{ blogIntroduce },
				BLOG_INTEREST = #{ blogInterest },
				PLANT_PREFER = #{ plantPrefer }
			WHERE
			  	BLOG_NO = #{ blogNo }

	</update>

	<!-- 블로그 카테고리 생성 -->
	<insert id="insertCategory" parameterType="blogCategorySetting">
		INSERT 
		  INTO
		  		TB_BLOG_CATEGORY_SETTING
			  	(
			  	CATEGORY_SETTING_NO,
			  	BLOG_NO, 
			  	CATEGORY_NO,
			  	CATEGORY_MEM_NAME
			  	)
			  VALUES 	
			  	(
			  	SEQ_CATEGORY_SETTING_NO.NEXTVAL,
		<choose>
			<when test="blogNo eq '0'">
			  			SEQ_BLOG.CURRVAL,
			</when>
			<otherwise>
					  	#{ blogNo },
			</otherwise>
		</choose>
			  	#{ categoryNo },
		<choose>
			<when test="categoryNo eq '10'">
			  			'게시판'
			</when>
			<when test="categoryNo eq '20'">
			  			'식물일지'
			</when>
			<when test="categoryNo eq '30'">
			  			'ToDoList'
			</when>
			<otherwise>
			  			'---------------'
			</otherwise>
		</choose>
			  	)
			  	
	</insert>

	<!-- 블로그 카테고리  조회 -->
	<select id="selectCatogory" parameterType="_int" resultMap="BlogCategorySettingResultSet">
		SELECT 
			CATEGORY_SETTING_NO, 
			CATEGORY_MEM_NAME, 
			CATEGORY_NO
	    FROM 
	    	TB_BLOG_CATEGORY_SETTING
	    WHERE  
	    	BLOG_NO = #{ blogNo }
		
	</select>

	<!-- 블로그 카테고리 업데이트하기 -->
	<update id="updateCatogory" parameterType="blogCategorySetting">
	
		UPDATE 
			  TB_BLOG_CATEGORY_SETTING 
			SET 
				CATEGORY_MEM_NAME = #{ categoryMemName }
			WHERE 
				CATEGORY_SETTING_NO = #{ categorySettingNo }
	
	</update>

	<!-- 블로그 카테고리 삭제하기 -->
	<delete id="deleteCatogory" parameterType="_int">
	
		DELETE 
		  FROM 
		  		TB_BLOG_CATEGORY_SETTING 
		  WHERE 
		  		CATEGORY_SETTING_NO = #{ categorySettingNo } 
	
	</delete>

	<!-- 식물 등록하기 -->
	<insert id="insertBlogPlant" parameterType="plant">
		
		INSERT 
		  INTO
				TB_PLANT
				(
				PLANT_NO, 
				BLOG_NO, 
				PLANT_NAME,
				PLANT_NICKNAME,
				PLANT_COMMENT, 
				CREATE_DATE, 
				STATUS, 
				PLANT_LOG_DATE
				)
		VALUES
				(
				SEQ_PLANT_NO.NEXTVAL, 
				#{ blogNo }, 
				#{ plantName }, 
				#{ plantNickName }, 
				#{ plantComment }, 
				SYSDATE, 
				DEFAULT, 
				#{ plantLogDate }
				)
	
	</insert>


	<!-- 식물 전체 리스트 수 조회 -->
	<select id="selectListCountPlant" resultType="_int">
	
		SELECT 
			   COUNT(*)
		  FROM 
			   TB_PLANT
		 WHERE 
		 	   BLOG_NO = #{ blogNo }
		 AND 
		 	   STATUS = 'Y'
		 	   
	</select>

	<!-- 식물 전체 조회 리스트  -->
	<select id="selectListPlant" parameterType="_int" resultMap="PlantResultSet">
	
		SELECT 
	        PLANT_NO, 
	        BLOG_NO, 
	        PLANT_NAME, 
	        PLANT_NICKNAME, 
	        PLANT_COMMENT, 
	        CREATE_DATE, 
	        PLANT_CATEGORY, 
	        TRUNC(SYSDATE - PLANT_LOG_DATE) PLANT_LOG_DATE,
	        
	        FILE_PATH,
            UPDATE_NAME
	    FROM 
	        TB_PLANT
        LEFT OUTER JOIN 
        	TB_ATTACHMENT ON(PLANT_NO = REF_NO)
	    WHERE
	        STATUS = 'Y'
	    AND 
	        BLOG_NO = #{ blogNo }
	    ORDER BY
	    	PLANT_LOG_DATE DESC
	
	</select>

	<!-- 식물 조회 -->
	<select id="selectBlogPlant" parameterType="_int" resultMap="PlantResultSet">
		SELECT 
		        PLANT_NO, 
		        BLOG_NO,
		        PLANT_NAME, 
		        PLANT_NICKNAME,
		        PLANT_COMMENT,
		        CREATE_DATE,  
		        PLANT_CATEGORY, 
		        TO_CHAR(PLANT_LOG_DATE, 'YYYY-MM-DD') PLANT_LOG_DATE,
		        
		        FILE_PATH,
            	UPDATE_NAME
	    FROM 
	        	TB_PLANT
	    LEFT OUTER JOIN 
        		TB_ATTACHMENT ON(PLANT_NO = REF_NO)
	    WHERE
	        	PLANT_NO = #{ plantNo }
	    AND 
	        	STATUS = 'Y'
        
	</select>

	<update id="updateBlogPlant" parameterType="plant">
    
    	UPDATE 
    			TB_PLANT
    	   SET
		        PLANT_NICKNAME = #{ plantNickName },
		        PLANT_COMMENT = #{ plantComment },
		        PLANT_LOG_DATE = #{ plantLogDate }
		  WHERE 
		  		PLANT_NO = #{ plantNo }			 
		  		 
	</update>



	<!-- 식물 삭제하기 -->
	<delete id="deleteBlogPlant" parameterType="_int">
		DELETE 
				TB_PLANT
	    	WHERE 
	    		PLANT_NO = #{ plantNo }
	
	</delete>

	<!-- 식물 일지 등록하기 -->
	<insert id="insertPlantReport">
	
		INSERT 
		  INTO
		  		TB_PLANT_REPORT
		  		(
		  		PLANT_REPORT_NO, 
		  		TOP_PLANT_NO,
		  		PLANT_REPORT_CATEGORY_NO, 
		  		REPORT_COMMENT, 
		  		REPORT_DATE,
		  		)
		  	VALUES
		  		(
		  		SEQ_REPORT_NO.NEXTVAL, 
		  		#{ plantNo },
		  		#{ plantReportCategoryNo },
		  		#{ plantComment }, 
		  		#{ plantLogDate },
		  		)
	
	</insert>

	
	<!-- 블로그 일반 게시글 작성 -->

	<insert id="insertBlogBoard" parameterType="blogBoard">
	
		INSERT 
		  INTO 
			    TB_BLOG_BOARD
			        (
			        BLOG_BOARD_NO, 
			        BLOG_NO, 
			        CATEGORY_SETTING_NO, 
			        BLOG_BOARD_TITLE, 
			        BLOG_BOARD_CONTENT, 
			        CREATE_DATE, 
			        STATUS, 
			        WRITER
			        )
			    VALUES
			        (
			        SEQ_BLOG_BOARD_NO.NEXTVAL, 
			        #{ blogNo },
			        #{ cattegorySettingNo }, 
			        #{ blogBoardTitle }, 
			        #{ blogBoardContent }, 
			        DEFAULT, 
			        DEFAULT, 
			        #{ writer }
			        )
		
	</insert>
	
	<!-- 블로그 일반 게시글 전체 리스트 수 조회 -->
	<select id="selectListCountBlogBoard" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM 
			   TB_BLOG_BOARD
		 WHERE 
		 	   BLOG_NO = #{ blogNo }
		 AND 
		 	   STATUS = 'Y'
	</select>
	
	<!-- 블로그 일반 게시글 리스트 조회 -->
	<select id="selectBlogBoardList" parameterType="_int" resultMap="BlogBoardResultSet">
	
		SELECT  
			        BLOG_BOARD_NO, 
			        B.BLOG_NO, 
			        B.CATEGORY_SETTING_NO, 
		            
			        c.CATEGORY_MEM_NAME,
		            
		            BLOG_BOARD_TITLE, 
			        BLOG_BOARD_CONTENT, 
			        CREATE_DATE,
			        WRITER
			    FROM
			        TB_BLOG_BOARD B
		        JOIN 
		            TB_BLOG_CATEGORY_SETTING C on(B.CATEGORY_SETTING_NO = C.CATEGORY_SETTING_NO) 
			    WHERE
			        B.BLOG_NO = #{ blogNo }
			    AND
			        STATUS = 'Y'
	        
	</select>
	
	<!-- 블로그 일반 게시글 조회 -->
	<select id="selectBlogBoard" parameterType="_int" resultMap="BlogBoardResultSet">
	
		
		SELECT  
	        BLOG_BOARD_NO, 
	        BLOG_NO, 
	        CATEGORY_SETTING_NO, 
	        BLOG_BOARD_TITLE, 
	        BLOG_BOARD_CONTENT, 
	        CREATE_DATE,
	        WRITER
	    FROM
	        TB_BLOG_BOARD
	    WHERE
	        BLOG_BOARD_NO = #{ blogBoardNo }
	    AND
	        STATUS = 'Y'
	        
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="insertBlogReply" parameterType="blogReply">
	
		INSERT 
		  INTO
		  		TB_BLOG_REPLY
		  		(
		  		BLOG_REPLY_NO, 
		  		TOP_REPLY_NO,
		  		BLOG_BOARD_NO, 
		  		WRITER, 
		  		BLOG_REPLY_CONTENT, 
		  		CREATE_DATE, 
		  		REPLY_SECRET, 
		  		STATUS
		  		)
		VALUES 
				(
				SEQ_BLOG_REPLY.NEXTVAL, 
				0,
				#{ blogBoardNo }, 
				#{ writer }, 
				#{ blogReplycontent }, 
				SYSDATE, 
				DEFAULT, 
				DEFAULT
				)
				
	</insert>
	
	<!-- 댓글 리스트 수 조회 -->
	<select id="selectListCountBlogReply" parameterType="_int" resultType="_int">
		
		SELECT 
		    	COUNT(*)
		  FROM 
				TB_BLOG_REPLY
		 WHERE 
		 	   BLOG_BOARD_NO = #{ blogBoardNo }
		 AND 
		 	   STATUS = 'Y'
	
	</select>

	<!-- 댓글 리스트 조회 -->
	<select id="selectListBlogReply" parameterType="_int" resultMap="BlogReplyResultset">

		SELECT
			BLOG_REPLY_NO,
			TOP_REPLY_NO,
			BLOG_BOARD_NO,
            MEM_NICK,
			R.CREATE_DATE,
			R.STATUS
		FROM
			TB_BLOG_REPLY R
        JOIN 
            TB_MEMBER ON (MEM_NO = WRITER)
		WHERE
			STATUS = 'Y'
		AND
			BLOG_BOARD_NO = #{ blogBoardNo }

	</select>

	<!-- 댓글 수정 -->
	
	<!-- 댓글 삭제 -->
	
	
</mapper>
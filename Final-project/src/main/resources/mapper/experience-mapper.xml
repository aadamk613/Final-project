<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="experienceMapper">
	
	<resultMap id="experienceResultSet" type="experience">
		<result column="EXP_NO" property="expNo" />
		<result column="EXP_TITLE" property="expTitle" />
		<result column="EXP_WRITER" property="expWriter" />
		<result column="EXP_PEOPLE" property="expPeople" />
		<result column="EXP_CONTENT" property="expContent" />
		<result column="EXP_CREATE_DATE" property="expCreateDate" />
		<result column="EXP_WORK_DATE" property="expWorkDate" />
		<result column="EXP_WORK_TIME" property="expWorkTime" />
		<result column="EXP_END_DATE" property="expEndDate" />
		<result column="EXP_STATUS" property="expStatus" />
		<result column="EXP_COUNT" property="expCount" />
		<result column="EXP_UPDATE_DATE" property="expUpdateDate" />
		<result column="EXP_AREA" property="expArea" />
		<result column="EXP_ADDRESS" property="expAddress" />
		<result column="EXP_CATEGORY_NO" property="expCategoryNo" />
		<result column="EXP_CATEGORY_NAME" property="expCategoryName" />
		<result column="EXP_LIKE_COUNT" property="expLikeCount" />
		<result column="EXP_REPLY_COUNT" property="expReplyCount" />
		<result column="EXP_SUPPORT_COUNT" property="expSupportCount" />
	</resultMap>
	
	<resultMap id="expReplyResultSet" type="experienceReply">
		<result column="EXP_REPLY_NO" property="expReplyNo" />
		<result column="REPLY_WRITER" property="replyWriter" />
		<result column="REPLY_CREATE_DATE" property="replyCreateDate" />
		<result column="REPLY_CONTENT" property="replyContent" />
		<result column="REPLY_STATUS" property="replyStatus" />
		<result column="REPLY_MODIFY_DATE" property="replyModifyDate" />
		<result column="REPLY_SECRET" property="replySecret" />
	</resultMap>
	
	<!-- 체험학습 목록 개수 조회 -->
	<select id="selectListCount" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM 
			   TB_EXPERIENCE
		 WHERE 
		 	   EXP_STATUS = 'Y'
	</select>
	
	<!-- 체험학습 목록조회 -->
	<select id="selectExperienceList" resultMap="experienceResultSet">
		SELECT 
		       EXP_NO,
		       EXP_TITLE,
		       EXP_WRITER,
		       EXP_PEOPLE,
		       EXP_CONTENT,
		       TO_CHAR(EXP_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') EXP_CREATE_DATE,
		       TO_CHAR(EXP_WORK_DATE, 'YYYY-MM-DD') EXP_WORK_DATE,
		       EXP_WORK_TIME, 
		       TO_CHAR(EXP_END_DATE, 'YYYY-MM-DD') EXP_END_DATE,
		       EXP_STATUS,
		       EXP_COUNT,
		       TO_CHAR(EXP_UPDATE_DATE, 'YYYY-MM-DD') EXP_UPDATE_DATE,
		       EXP_AREA,
		       EXP_ADDRESS,
		       EXP_CATEGORY_NO,
		       EXP_CATEGORY_NAME
		  FROM
		       TB_EXPERIENCE 
		  JOIN 
		       TB_EXPERIENCE_CATEGORY 
		 USING 
		       (EXP_CATEGORY_NO)
		 WHERE 
		       EXP_STATUS = 'Y'
		 ORDER
		 	BY
		 	   EXP_NO DESC
	</select>
	
	<!-- 체험학습 조회수 증가 -->
	<update id="increaseCount" parameterType="_int">
		UPDATE 
			   TB_EXPERIENCE 
		   SET 
		   	   EXP_COUNT = EXP_COUNT + 1 
		 WHERE 
		 	   EXP_NO = #{ expNo }
		   AND 
		       EXP_STATUS = 'Y'
	</update>
	
	<!-- 체험학습 상세조회 -->
	<select id="selectExperience" parameterType="_int" resultMap="experienceResultSet">
		SELECT 
		       EXP_NO,
		       EXP_TITLE,
		       EXP_WRITER,
		       EXP_PEOPLE,
		       EXP_CONTENT,
		       TO_CHAR(EXP_CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') EXP_CREATE_DATE,
		       TO_CHAR(EXP_WORK_DATE, 'YYYY-MM-DD') EXP_WORK_DATE,
		       EXP_WORK_TIME, 
		       TO_CHAR(EXP_END_DATE, 'YYYY-MM-DD') EXP_END_DATE,
		       EXP_STATUS,
		       EXP_COUNT,
		       TO_CHAR(EXP_UPDATE_DATE, 'YYYY-MM-DD') EXP_UPDATE_DATE,
		       EXP_AREA,
		       EXP_ADDRESS,
		       EXP_CATEGORY_NO,
		       EXP_CATEGORY_NAME, 
		       NVL(EXP_LIKE_COUNT, 0) EXP_LIKE_COUNT,
		       NVL(EXP_REPLY_COUNT, 0) EXP_REPLY_COUNT,
		       NVL(EXP_SUPPORT_COUNT, 0) EXP_SUPPORT_COUNT
		  FROM
		       TB_EXPERIENCE 
		  JOIN 
		       TB_EXPERIENCE_CATEGORY 
		 USING 
		       (EXP_CATEGORY_NO)
		  LEFT 
		  JOIN
		       (SELECT 
		               COUNT(*) EXP_LIKE_COUNT, 
		               EXP_NO 
		          FROM 
		               TB_EXPERIENCE_LIKE 
		         GROUP 
		            BY 
		               EXP_NO) 
		 USING
		       (EXP_NO)
		  LEFT
		  JOIN
		       (SELECT 
		               COUNT(*) EXP_REPLY_COUNT, 
		               EXP_NO 
		          FROM 
		               TB_EXPERIENCE_REPLY 
		         GROUP 
		            BY 
		               EXP_NO) 
		 USING
		       (EXP_NO)
		  LEFT
		  JOIN
		       (SELECT 
		               COUNT(*) EXP_SUPPORT_COUNT, 
		               EXP_NO 
		          FROM 
		               TB_EXPERIENCE_PEOPLE 
		         WHERE 
		               EXP_PEOPLE_STATUS = 'Y'  
		         GROUP 
		            BY 
		               EXP_NO) 
		 USING 
		       (EXP_NO)
		 WHERE 
		       EXP_STATUS = 'Y'
		   AND
		       EXP_NO = #{ expNo }
	</select>
	
	<select id="selectReplyList" parameterType="_int" resultType="experienceReply">
		SELECT
		       EXP_REPLY_NO expReplyNo,
		       REPLY_WRITER replyWriter,
		       REPLY_CREATE_DATE replyCreateDate,
		       REPLY_CONTENT replyContent,
		       REPLY_STATUS replyStatus,
		       REPLY_MODIFY_DATE replyModifyDate,
		       REPLY_SECRET replySecret
		  FROM
		       TB_EXPERIENCE_REPLY
		 WHERE 
		       EXP_NO = #{ expNo }
		   AND
		   	   REPLY_STATUS = 'Y'
		 ORDER
		 	BY
		 	   REPLY_CREATE_DATE DESC
	</select>
	
	<!-- 체험학습 게시글 작성  -->
	<insert id="insertExperience" parameterType="experience">
		INSERT
		  INTO
		  	   TB_EXPERIENCE
		  	   (
		  	   EXP_NO,
			   EXP_TITLE,
			   EXP_WRITER,
			   EXP_PEOPLE,
			   EXP_CONTENT,
			   EXP_CREATE_DATE,
			   EXP_WORK_DATE,
			   EXP_END_DATE,
			   EXP_STATUS,
			   EXP_COUNT,
			   EXP_UPDATE_DATE,
			   EXP_AREA,
			   EXP_ADDRESS,
			   EXP_CATEGORY_NO,
			   EXP_WORK_TIME
		  	   )
		VALUES
			   (
			   SEQ_EXPERIENCE.NEXTVAL,
			   #{ expTitle },
			   #{ expWriter },
			   #{ expPeople },
			   #{ expContent },
			   SYSDATE,
			   #{ expWorkDate },
			   #{ expEndDate },
			   'Y',
			   0,
			   null,
			   #{ expArea },
			   #{ expAddress },
			   #{ expCategoryNo },
			   #{ expWorkTime }
			   )
	</insert>
	
	
	<update id="deleteExperience" parameterType="_int">
		UPDATE
			   TB_EXPERIENCE
		   SET
		   	   EXP_STATUS = 'N'
		 WHERE
		  	   EXP_STATUS = 'Y'
		   AND
		   	   EXP_NO = #{ expNo }
	</update>
	
	<!-- 체험학습 게시글 댓글 작성 -->
	<insert id="insertExpReply" parameterType="experienceReply">
		INSERT 
		  INTO 
		  	   TB_EXPERIENCE_REPLY
		  	   (
		  	  	EXP_REPLY_NO,
				REPLY_WRITER,
				REPLY_CONTENT,
				REPLY_SECRET,
				EXP_NO
		  	   )
		VALUES 
			   (
			   SEQ_EXPERIENCE_REPLY.NEXTVAL,
			   #{ replyWriter },
			   #{ replyContent },
			   #{ replySecret },
			   #{ expNo }
			   )
	</insert>

	<!-- 체험학습 게시글 사용자 좋아요 조회 -->
	<select id="selectExpLike" parameterType="hashmap" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM 
		  	   TB_EXPERIENCE_LIKE
		 WHERE
		 	   EXP_NO = #{ expNo }
		   AND
		   	   MEM_NO = #{ memNo }
	</select>
	
	<!-- 체험학습 게시글 좋아요 등록 -->
	<insert id="insertExpLike" parameterType="hashmap">
		INSERT
		  INTO
		  	   TB_EXPERIENCE_LIKE
		  	   (
		  	   EXP_NO,
		  	   MEM_NO
		  	   )
		VALUES 
				(
				#{ expNo },
				#{ memNo }
				)
	</insert>
	
	<!-- 체험학습 게시글 좋아요 취소 -->
	<delete id="deleteExpLike" parameterType="hashmap">
		DELETE
		  FROM
		  	   TB_EXPERIENCE_LIKE
		 WHERE
		 	   EXP_NO = #{ expNo }
		   AND
		   	   MEM_NO = #{ memNo }
	</delete>
	
	<!-- 체험학습 댓글 삭제 -->
	<delete id="deleteExpReply" parameterType="_int">
		UPDATE
			   TB_EXPERIENCE_REPLY
		   SET
		   	   REPLY_STATUS = 'N'
		 WHERE
		 	   EXP_REPLY_NO = #{ expReplyNo }
	</delete>
	
	<!-- 체험학습 게시글 수정 -->
	<update id="updateExperience" parameterType="experience">
		UPDATE
			   TB_EXPERIENCE
		   SET
			   EXP_TITLE = #{ expTitle },
			   EXP_PEOPLE = #{ expPeople },
			   EXP_CONTENT = #{ expContent } ,
			   EXP_WORK_DATE = #{ expWorkDate },
			   EXP_WORK_TIME = #{ expWorkTime },
			   EXP_END_DATE = #{ expEndDate },
			   EXP_UPDATE_DATE = SYSDATE,
			   EXP_AREA = #{ expArea },
			   EXP_ADDRESS = #{ expAddress },
			   EXP_CATEGORY_NO = #{ expCategoryNo }
		WHERE 
			   EXP_NO = #{ expNo }
	</update>
	
	<!-- 체험학습 게시글 첨부파일 수정 삭제 -->
	<delete id="deleteExpFiles" parameterType="string">
		DELETE 
		  FROM
		  	   TB_FILES
		 WHERE
		 	   UPDATE_NAME = SUBSTR('resources/uploadFiles/experience/2023112812200118248.jpg', INSTR('resources/uploadFiles/experience/2023112812200118248.jpg', '/', - 1) + 1)
		   AND
		   	   REF_TYPE = #{ refType }
	</delete>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>